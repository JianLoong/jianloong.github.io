<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Selection on Jian</title>
    <link>https://examplesite.com/tags/selection/</link>
    <description>Recent content in Selection on Jian</description>
    <image>
      <url>https://examplesite.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://examplesite.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 23 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://examplesite.com/tags/selection/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Traveling Sales Person using Genetic Algorithms</title>
      <link>https://examplesite.com/posts/tsp/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://examplesite.com/posts/tsp/</guid>
      <description>This post is best viewed using the light theme.
This post uses GA to generate a high quality solution of the Traveling Salesman Problem.
Traveling Salesman Problem using Genetic Algorithm This blog post is regarding using genetic algorithm to solve the Traveling Salesman Problem. In a one liner the TSP asks the following question: Given a list of cities and the distances between each pair of the cities, what is the shortest possible route that visits each city and returns to the origin city?</description>
    </item>
    
    <item>
      <title>Genetic Algorithm using Web Workers</title>
      <link>https://examplesite.com/posts/ga/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://examplesite.com/posts/ga/</guid>
      <description>This post is a simple implementation of Genetic Algorithm GA. Here, you would start with a random string and end up with the target string.
This post is heavily inspired based on this website. However, I created the codes with a very different methodology to also include newer JavaScript methods using classes and also web worker so it run behind the scenes.
Cross Over Method One PointTwo PointUniformPMXSelection Method TournamentRandomRankRoulette WheelTarget String: Run</description>
    </item>
    
  </channel>
</rss>
