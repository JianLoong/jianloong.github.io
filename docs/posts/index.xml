<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Jian</title>
    <link>https://jianloong.github.io/posts/</link>
    <description>Recent content in Posts on Jian</description>
    <image>
      <url>https://jianloong.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://jianloong.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 18 Oct 2022 21:30:56 +1100</lastBuildDate><atom:link href="https://jianloong.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple reddit crawler for the /r/programming subreddit</title>
      <link>https://jianloong.github.io/posts/quick/</link>
      <pubDate>Tue, 18 Oct 2022 21:30:56 +1100</pubDate>
      
      <guid>https://jianloong.github.io/posts/quick/</guid>
      <description>An educational approach to crawling Reddit using Python and AWS EC2 without using Reddit API</description>
    </item>
    
    <item>
      <title>Visual Studio Code extensions</title>
      <link>https://jianloong.github.io/posts/vscodeaddons/</link>
      <pubDate>Tue, 18 Oct 2022 14:22:00 +1100</pubDate>
      
      <guid>https://jianloong.github.io/posts/vscodeaddons/</guid>
      <description>Here are some of the extensions I use on my Vscode.
Peacock This might be a weird extension for some but over time, for me, it increases productivity.
Remote - SSH</description>
    </item>
    
    <item>
      <title>Crawling Reddit using Python and AWS EC2 - Part 1</title>
      <link>https://jianloong.github.io/posts/redditcrawler/</link>
      <pubDate>Mon, 17 Oct 2022 21:30:56 +1100</pubDate>
      
      <guid>https://jianloong.github.io/posts/redditcrawler/</guid>
      <description>An educational approach to crawling Reddit using Python and AWS EC2 without using Reddit API</description>
    </item>
    
    <item>
      <title>Setting up PiHole as an ad blocker</title>
      <link>https://jianloong.github.io/posts/pihole/</link>
      <pubDate>Mon, 17 Oct 2022 21:30:56 +1100</pubDate>
      
      <guid>https://jianloong.github.io/posts/pihole/</guid>
      <description>An educational approach to crawling Reddit using Python and AWS EC2 without using Reddit API</description>
    </item>
    
    <item>
      <title>Singleton &amp; Observer Pattern (Java)</title>
      <link>https://jianloong.github.io/posts/singletonobserverpattern/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jianloong.github.io/posts/singletonobserverpattern/</guid>
      <description>This blog post will demonstrate a simple use case where the singleton and observable design pattern becomes important.
Let&amp;rsquo;s imagine if you are in the arcade and there is a Lucky Dip Machine. The reason I like call it the LuckyDipMachine is because it is one of the feature assignments in the Programming Foundation Units in Monash University and it is often times made fun at. However, the solution for assignment itself can be engineered to be better.</description>
    </item>
    
    <item>
      <title>k-Nearest Neighbour on Maps</title>
      <link>https://jianloong.github.io/posts/voronoi/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jianloong.github.io/posts/voronoi/</guid>
      <description>One of the most common query when working with maps is the nearest neighbour query. This blog post will use Voronoi Diagrams to explain more regarding the nearest neighbour query.
Below is an example of a Voronoi diagram generated using d3.js. One of the good use case of a voronoi diagram in real life applications would be where would be finding a place to build emergency services. This place should have the most number of neighbouring regions.</description>
    </item>
    
    <item>
      <title>JavaScript Promise All - Parsing Hackernews Stories using Promise.all</title>
      <link>https://jianloong.github.io/posts/promiseall/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jianloong.github.io/posts/promiseall/</guid>
      <description>This post is a an entry to describe a use case when the Promise.all JavaScript method is needed. The official reference can be found here. This assumes that the reader has a basic understanding of how promises work.
Before we start, there is a need to understand how certain RESTful services are structured. For example, the Hacker News API has the end point called topstories. This end point however, does not contain any other information besides a list of item IDs.</description>
    </item>
    
    <item>
      <title>Traveling Sales Person using Genetic Algorithms</title>
      <link>https://jianloong.github.io/posts/tsp/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jianloong.github.io/posts/tsp/</guid>
      <description>This post is best viewed using the light theme.
This post uses GA to generate a high quality solution of the Traveling Salesman Problem.
Traveling Salesman Problem using Genetic Algorithm This blog post is regarding using genetic algorithm to solve the Traveling Salesman Problem. In a one liner the TSP asks the following question: Given a list of cities and the distances between each pair of the cities, what is the shortest possible route that visits each city and returns to the origin city?</description>
    </item>
    
    <item>
      <title>Genetic Algorithm using Web Workers</title>
      <link>https://jianloong.github.io/posts/ga/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jianloong.github.io/posts/ga/</guid>
      <description>This post is a simple implementation of Genetic Algorithm GA. Here, you would start with a random string and end up with the target string.
This post is heavily inspired based on this website. However, I created the codes with a very different methodology to also include newer JavaScript methods using classes and also web worker so it run behind the scenes.
Cross Over Method One PointTwo PointUniformPMXSelection Method TournamentRandomRankRoulette WheelTarget String: Run</description>
    </item>
    
    <item>
      <title>Sentiment analysis for the subreddit Hong Kong</title>
      <link>https://jianloong.github.io/posts/hk/</link>
      <pubDate>Sun, 13 Oct 2019 20:56:02 +1100</pubDate>
      
      <guid>https://jianloong.github.io/posts/hk/</guid>
      <description>Sentiment Analysis for the Sub-Reddit &amp;ldquo;HongKong&amp;rdquo; This post will perform sentiment analysis using AFINN. AFINN is a list of words rated for valence rated with an integer between minus five(negative) and plus five (positive). This implementation uses AFINN-en-165. 1
This approach however is a very naive approach as it does not build any models to determine the context of the usage of the word itself.
Please note that the posts here are generated based on the Reddit website by doing GET requests.</description>
    </item>
    
    <item>
      <title>Reddit Word Cloud for the subreddit programming</title>
      <link>https://jianloong.github.io/posts/programmming/</link>
      <pubDate>Sat, 12 Oct 2019 20:56:02 +1100</pubDate>
      
      <guid>https://jianloong.github.io/posts/programmming/</guid>
      <description>The word cloud generated here is based on the /r/programming subreddit for reddit.com
The reason this post is made, is so that it would easier to see the word that appeared the most for the day.
Even though the use of a word cloud is not exactly a good representation of occurrence, it still looks nice.
Please note that the posts here are generated based on the Reddit website by doing GET requests.</description>
    </item>
    
    <item>
      <title>Percentage Charts for the subreddit Am I the Asshole?</title>
      <link>https://jianloong.github.io/posts/amitheasshole/</link>
      <pubDate>Wed, 09 Oct 2019 20:56:02 +1100</pubDate>
      
      <guid>https://jianloong.github.io/posts/amitheasshole/</guid>
      <description>The charts here are visualisation of the Am I the Asshole? subreddit which can be found here
Basically the subreddit describes itself as&amp;hellip;
A catharsis for the frustrated moral philosopher in all of us, and a place to finally find out if you were wrong in an argument that&amp;rsquo;s been bothering you. Tell us about any non-violent conflict you have experienced; give us both sides of the story, and find out if you&amp;rsquo;re right, or you&amp;rsquo;re the asshole.</description>
    </item>
    
  </channel>
</rss>
