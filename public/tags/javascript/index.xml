<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JavaScript on Jian</title>
    <link>docs/tags/javascript/</link>
    <description>Recent content in JavaScript on Jian</description>
    <image>
      <url>docs</url>
      <link>docs</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 20 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="docs/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sentiment Analysis using VADER in JavaScript</title>
      <link>docs/posts/vader/</link>
      <pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>docs/posts/vader/</guid>
      <description>Enter text to be analysed: Sentiment analysis studies the subjective information in an expression, that is, the opinions, appraisals, emotions, or attitudes towards a topic, person or entity. Expressions can be classified as positive, negative, or neutral. For example: I really like the new design of your website!Run
Results NegativePositiveCompoundReferences Cjhutto CJHUTTO/Vadersentiment: Vader sentiment analysis. vader (valence aware dictionary and sentiment reasoner) is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media, and works well on texts from other domains.</description>
    </item>
    
    <item>
      <title>JavaScript Promise All - Parsing Hackernews Stories using Promise.all</title>
      <link>docs/posts/promiseall/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>docs/posts/promiseall/</guid>
      <description>This post is a an entry to describe a use case when the Promise.all JavaScript method is needed. The official reference can be found here. This assumes that the reader has a basic understanding of how promises work.
Before we start, there is a need to understand how certain RESTful services are structured. For example, the Hacker News API has the end point called topstories. This end point however, does not contain any other information besides a list of item IDs.</description>
    </item>
    
  </channel>
</rss>
